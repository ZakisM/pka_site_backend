{"version":3,"sources":["redux/search/types.ts","components/DrawerListItem.tsx","components/DrawerComponent.tsx","components/SearchResultCard.tsx","redux/watch-episode/types.ts","redux/search/actions.ts","redux/watch-episode/actions.ts","components/SearchComponent.tsx","components/PlayerEventCard.tsx","components/PlayerComponent.tsx","redux/search/reducers.ts","redux/watch-episode/reducers.ts","redux/index.ts","redux/store.ts","components/RootComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SearchItemType","useStyles","makeStyles","theme","link","color","textDecoration","item","height","backgroundColor","fade","palette","common","white","itemText","marginLeft","active","borderLeft","pointerEvents","cursor","DrawerListItem","props","text","Icon","classes","path","toLowerCase","defaultMatch","useRouteMatch","exact","match","inner","ListItem","className","key","ListItemIcon","ListItemText","Typography","variant","to","drawer","breakpoints","up","width","flexShrink","appBar","zIndex","appBarTitle","fontFamily","fontSize","fontWeight","menuButton","marginRight","spacing","display","toolbar","mixins","drawerPaper","DrawerComponent","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","LiveTvIcon","TheatersIcon","EventIcon","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","avatar","resultCard","SearchResultCard","episodeNumber","title","subtitle","Card","CardHeader","Avatar","subheader","SearchEventTypes","EventSearchResult","timestamp","description","this","moment","utc","Number","format","input","PkaSearchResult","uploadDate","WatchEpisodeTypes","searchEventStarted","type","STARTED","searchEventSuccess","searchResult","SUCCESS","payload","searchEventFailure","err","FAILURE","meta","error","setSearchType","searchType","SET_SEARCH_TYPE","watchPKAEpisode","dispatch","watchEpisodeStarted","axios","get","then","res","watchEpisodeResult","episode","data","youtubeDetails","events","watchEpisodeSuccess","catch","message","response","watchEpisodeFailure","watchState","root","flexFlow","search","borderRadius","black","padding","flexGrow","iconButton","inputInput","flex","subTitle","marginBottom","searchRow","alignItems","reverseButton","boxShadow","connect","state","searchState","pathname","router","location","searchPKAItem","searchQuery","searchItemType","getState","endpoint","EPISODE","EVENT","getEndpoint","post","query","searchResults","sr","push","Deserialize","reverseResults","reverse","number","searchEventClearResults","CLEAR","reverseResultsToggle","REVERSE_RESULTS_TOGGLE","searchPKAItemDebounced","useConstant","AwesomeDebouncePromise","setInput","inputRef","useRef","history","useHistory","useEffect","iRef","current","focus","resetInput","value","isMobile","window","addEventListener","removeEventListener","useAsync","a","trim","length","cellMeasurerCache","CellMeasurerCache","fixedWidth","defaultHeight","paddedRowHeight","index","rowHeight","renderRow","style","parent","cache","rowIndex","cardTitle","cardSubtitle","Box","InputBase","placeholder","inputProps","fullWidth","onChange","e","target","isLoading","CircularProgress","size","thickness","Tooltip","Fab","disableRipple","disableTouchRipple","disableFocusRipple","deferredMeasureMentCache","rowCount","rowRenderer","overscanRowCount","watchEpisodeState","watchEpisode","id","cardRef","isActive","setActive","cRef","undefined","currentEventCard","scrollIntoView","behavior","block","ref","videoCard","halfHeight","marginTop","fullHeight","flexColumn","eventsWidth","eventsCard","eventsHeader","textAlign","listItem","saveTimestamp","SAVE_TIMESTAMP","setCurrentEventCard","SET_EVENT_CARD","playerRef","isInitial","setInitial","forEach","event","loadTimestamp","pRef","seekTo","hasEvents","isMobilePortrait","outerHeight","outerWidth","Skeleton","maxHeight","overflow","CardContent","Array","fill","map","i","config","youtube","preload","url","videoId","origin","getUrl","controls","playing","onError","console","log","onProgress","getCurrentTime","synchronizeTimestamp","onPlay","onReady","initialState","errors","searchReducer","action","LOCATION_CHANGE","watchEpisodeReducer","createBrowserHistory","middlewares","thunk","routerMiddleware","enhancers","applyMiddleware","composedEnhancer","composeWithDevTools","createStore","combineReducers","connectRouter","content","paddingBottom","RootComponent","App","Boolean","hostname","darkTheme","createMuiTheme","background","default","primary","main","secondary","ReactDOM","render","store","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a264811.chunk.js","sourcesContent":["import moment from \"moment\";\nimport {LOCATION_CHANGE} from \"connected-react-router\";\n\nexport interface SearchState {\n    searchQuery: string\n    searchResults: SearchResult[]\n    searchType?: SearchItemType,\n    reverseResults?: boolean,\n    isLoading?: boolean\n    errors?: string[]\n}\n\nexport enum SearchItemType {\n    EPISODE = 'Episode',\n    EVENT = 'Event',\n}\n\nexport interface SearchResult {\n    episodeNumber: number,\n    timestamp: number,\n\n    cardTitle(): string,\n\n    cardSubtitle(): string,\n}\n\nexport interface EventSearchResultFields extends SearchResult {\n    episodeNumber: number,\n    timestamp: number,\n    description: string,\n}\n\nexport class EventSearchResult implements EventSearchResultFields {\n    episodeNumber: number;\n    timestamp: number;\n    description: string;\n\n    constructor(episodeNumber: number, timestamp: number, description: string) {\n        this.episodeNumber = episodeNumber;\n        this.timestamp = timestamp;\n        this.description = description;\n    }\n\n    static Deserialize(input: any): EventSearchResult {\n        return new EventSearchResult(input.episodeNumber, input.timestamp, input.description)\n    }\n\n    cardTitle(): string {\n        return this.description;\n    }\n\n    cardSubtitle(): string {\n        return `Starts at ${moment.utc(Number(this.timestamp) * 1000).format(\"HH:mm:ss\")}`;\n    }\n}\n\nexport interface PkaSearchResultFields extends SearchResult {\n    episodeNumber: number,\n    uploadDate: number,\n    title: string,\n}\n\nexport class PkaSearchResult implements PkaSearchResultFields {\n    episodeNumber: number;\n    uploadDate: number;\n    title: string;\n\n    timestamp = 0;\n\n    constructor(episodeNumber: number, uploadDate: number, title: string) {\n        this.episodeNumber = episodeNumber;\n        this.uploadDate = uploadDate;\n        this.title = title;\n    }\n\n    static Deserialize(input: PkaSearchResultFields): PkaSearchResult {\n        return new PkaSearchResult(input.episodeNumber, input.uploadDate, input.title)\n    }\n\n    cardTitle(): string {\n        return this.title;\n    }\n\n    cardSubtitle(): string {\n        return moment.utc(Number(this.uploadDate) * 1000).format(\"dddd Do MMMM YYYY\");\n    }\n\n}\n\nexport enum SearchEventTypes {\n    STARTED = 'SEARCH_EVENT_STARTED',\n    FAILURE = 'SEARCH_EVENT_FAILURE',\n    SUCCESS = 'SEARCH_EVENT_SUCCESS',\n    CLEAR = 'SEARCH_EVENT_CLEAR',\n    SET_SEARCH_TYPE = 'SET_SEARCH_TYPE',\n    REVERSE_RESULTS_TOGGLE = 'REVERSE_RESULTS_TOGGLE',\n}\n\ninterface SearchEventSuccess {\n    type: SearchEventTypes.SUCCESS,\n    payload: SearchState\n}\n\ninterface SearchEventFailure {\n    type: SearchEventTypes.FAILURE\n    meta: {\n        error: string\n    }\n}\n\ninterface SearchEventStarted {\n    type: SearchEventTypes.STARTED\n}\n\ninterface SearchEventClearResults {\n    type: SearchEventTypes.CLEAR\n}\n\ninterface LocationChange {\n    type: typeof LOCATION_CHANGE\n}\n\ninterface SetSearchType {\n    type: SearchEventTypes.SET_SEARCH_TYPE,\n    payload: SearchItemType\n}\n\ninterface ReverseResultsToggle {\n    type: SearchEventTypes.REVERSE_RESULTS_TOGGLE,\n}\n\ntype SearchActionTypes =\n    SearchEventStarted\n    | SearchEventFailure\n    | SearchEventSuccess\n    | SearchEventClearResults\n    | LocationChange\n    | SetSearchType\n    | ReverseResultsToggle\n\nexport type SearchEventActionTypes = SearchActionTypes\n","import React from \"react\";\nimport {ListItem, ListItemIcon, ListItemText, SvgIcon, Typography} from \"@material-ui/core\";\nimport {Link, useRouteMatch} from \"react-router-dom\";\nimport {fade, makeStyles} from \"@material-ui/core/styles\";\n\ninterface DrawerListItemProps {\n    text: string,\n    Icon: typeof SvgIcon,\n}\n\nconst useStyles = makeStyles(theme => ({\n    link: {\n        color: 'white',\n        textDecoration: 'none',\n    },\n    item: {\n        height: '5.7ch',\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.025),\n        },\n        '&:active': {\n            backgroundColor: fade(theme.palette.common.white, 0.05),\n        },\n    },\n    itemText: {\n        marginLeft: '-12.5px',\n    },\n    active: {\n        borderLeft: '5px solid #7a1d23',\n        backgroundColor: fade(theme.palette.common.white, 0.05),\n        pointerEvents: 'none',\n        cursor: 'default',\n    }\n}));\n\nconst DrawerListItem: React.FC<DrawerListItemProps> = (props) => {\n    const {text, Icon} = props;\n    const classes = useStyles();\n\n    const path = `/${text.toLowerCase()}`;\n\n    let defaultMatch = useRouteMatch({\n        exact: true,\n        path: '/',\n    });\n\n    let match = useRouteMatch({\n        path: path,\n    });\n\n    const inner = (\n        <ListItem className={`${classes.item} ${match || (defaultMatch && text === \"Watch\") ? classes.active : null}`}\n                  key={text}>\n            <ListItemIcon>\n                <Icon/>\n            </ListItemIcon>\n            <ListItemText>\n                <Typography variant=\"button\"\n                            className={classes.itemText}>{text}</Typography>\n            </ListItemText>\n        </ListItem>\n    );\n\n    if (defaultMatch && text === \"Watch\") {\n        return (\n            inner\n        )\n    } else if (match) {\n        return (\n            inner\n        )\n    } else {\n        return (\n            <Link to={path}\n                  className={classes.link}>\n                {inner}\n            </Link>\n        )\n    }\n};\n\nexport default DrawerListItem;\n","import React from \"react\";\nimport {AppBar, Divider, Hidden, IconButton, List, Typography} from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport DrawerListItem from \"./DrawerListItem\";\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\n\nexport const drawerWidth = 220;\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: drawerWidth,\n        },\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    appBarTitle: {\n        fontFamily: 'Raleway',\n        fontSize: '1.5rem',\n        fontWeight: 800,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: '#0b0b0b',\n    },\n}));\n\nconst DrawerComponent: React.FC = () => {\n    const theme = useTheme();\n    const classes = useStyles();\n\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const drawer = (\n        <div>\n            <div className={classes.toolbar}/>\n            <Divider/>\n            <List>\n                <DrawerListItem text={\"Watch\"}\n                                Icon={LiveTvIcon}/>\n                <DrawerListItem text={\"Episodes\"}\n                                Icon={TheatersIcon}/>\n                <DrawerListItem text={\"Events\"}\n                                Icon={EventIcon}/>\n            </List>\n            <Divider/>\n        </div>\n    );\n\n    return (\n        <div>\n            <AppBar position=\"fixed\"\n                    className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography\n                        noWrap\n                        className={classes.appBarTitle}\n                    >\n                        PKA INDEX\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer}\n                 aria-label=\"All links\">\n                <Hidden smUp\n                        implementation=\"js\">\n                    <Drawer\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true,\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown\n                        implementation=\"js\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n        </div>\n    )\n};\n\nexport default DrawerComponent;","import React from \"react\";\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport {Avatar, Card, CardHeader} from \"@material-ui/core\";\n\ninterface Props {\n    episodeNumber: number,\n    title: string,\n    subtitle: string,\n}\n\nconst useStyles = makeStyles(() => ({\n    avatar: {\n        backgroundColor: '#7a1d23',\n        color: 'white',\n        width: '5ch',\n    },\n    resultCard: {\n        backgroundColor: fade('#7a1d23', 0.35),\n        '&:hover': {\n            backgroundColor: fade('#7a1d23', 0.5),\n            cursor: 'pointer',\n        },\n        '&:active': {\n            backgroundColor: fade('#7a1d23', 0.2),\n            cursor: 'pointer',\n        },\n    },\n}));\n\nconst SearchResultCard: React.FC<Props> = (props) => {\n    const classes = useStyles();\n    const {episodeNumber, title, subtitle} = props;\n\n    return (\n        <Card className={classes.resultCard}\n        >\n            <CardHeader\n                avatar={\n                    <Avatar variant=\"rounded\"\n                            aria-label=\"recipe\"\n                            className={classes.avatar}>\n                        {episodeNumber}\n                    </Avatar>\n                }\n                title={title}\n                subheader={subtitle}\n            />\n        </Card>\n    )\n};\n\nexport default SearchResultCard;\n","export interface WatchEpisodeState {\n    episode?: Episode,\n    youtubeDetails?: YoutubeDetails;\n    events?: Event[],\n    timestamp: number,\n    currentEventCard?: number,\n    isLoading?: boolean\n    errors?: string[]\n}\n\nexport interface Episode {\n    number: number,\n    name: string,\n    uploadDate: number,\n}\n\nexport interface YoutubeDetails {\n    videoId: string,\n    title: string,\n    lengthSeconds: number,\n    averageRating: number,\n}\n\nexport interface Event {\n    timestamp: number,\n    description: string,\n}\n\nexport enum WatchEpisodeTypes {\n    STARTED = 'PLAYER_STARTED',\n    FAILURE = 'PLAYER_FAILURE',\n    SUCCESS = 'PLAYER_SUCCESS',\n    SAVE_TIMESTAMP = 'PLAYER_SAVE_TIMESTAMP',\n    SET_EVENT_CARD = 'PLAYER_SET_EVENT_CARD',\n}\n\ninterface WatchEpisodeSuccess {\n    type: WatchEpisodeTypes.SUCCESS,\n    payload: WatchEpisodeState\n}\n\ninterface WatchEpisodeFailure {\n    type: WatchEpisodeTypes.FAILURE\n    meta: {\n        error: string\n    }\n}\n\ninterface WatchEpisodeStarted {\n    type: WatchEpisodeTypes.STARTED\n}\n\ninterface WatchEpisodeSaveTimestamp {\n    type: WatchEpisodeTypes.SAVE_TIMESTAMP,\n    payload: number\n}\n\ninterface WatchEpisodeSetEventCard {\n    type: WatchEpisodeTypes.SET_EVENT_CARD,\n    payload: number\n}\n\ntype WatchEpisodeActionTypes =\n    WatchEpisodeStarted\n    | WatchEpisodeFailure\n    | WatchEpisodeSuccess\n    | WatchEpisodeSaveTimestamp\n    | WatchEpisodeSetEventCard\n\nexport type WatchEpisodeRootActionTypes = WatchEpisodeActionTypes\n","import axios from \"axios\";\nimport {Dispatch} from \"redux\";\nimport {\n    EventSearchResult,\n    PkaSearchResult,\n    SearchEventActionTypes,\n    SearchEventTypes,\n    SearchItemType,\n    SearchState\n} from \"./types\";\nimport {RootState} from \"../index\";\n\nexport const searchPKAItem = (searchQuery: string, searchItemType: SearchItemType) => (dispatch: Dispatch<SearchEventActionTypes>, getState: () => RootState) => {\n    dispatch(searchEventStarted());\n    dispatch(setSearchType(searchItemType));\n\n    const getEndpoint = () => {\n        switch (searchItemType) {\n            case SearchItemType.EPISODE:\n                return 'search_pka_episode';\n            case SearchItemType.EVENT:\n                return 'search_pka_event';\n        }\n    };\n\n    let endpoint = getEndpoint();\n\n    axios\n        .post(`/v1/api/${endpoint}`, {query: searchQuery})\n        .then(res => {\n\n            let searchResults = [];\n\n            switch (searchItemType) {\n                case SearchItemType.EPISODE: {\n                    for (let sr of res.data.data) {\n                        searchResults.push(PkaSearchResult.Deserialize(sr))\n                    }\n                    break;\n                }\n                case SearchItemType.EVENT: {\n                    for (let sr of res.data.data) {\n                        searchResults.push(EventSearchResult.Deserialize(sr))\n                    }\n                    if (getState().search.reverseResults && searchResults) {\n                        searchResults = [...searchResults].reverse();\n                    }\n                    break;\n                }\n            }\n\n            let searchResult: SearchState = {\n                searchQuery: searchQuery,\n                searchResults: searchResults,\n            };\n\n            return dispatch(searchEventSuccess(searchResult))\n        })\n        .catch(err => {\n            if (err.message === \"Network Error\") {\n                err = \"Server appears to be offline.\";\n            } else if (err.response) {\n                err = err.response.data.message;\n            } else {\n                err = err.message;\n            }\n\n            return dispatch(searchEventFailure(err.message))\n        })\n};\n\nconst searchEventStarted = (): SearchEventActionTypes => ({\n    type: SearchEventTypes.STARTED,\n});\n\nconst searchEventSuccess = (searchResult: SearchState): SearchEventActionTypes => ({\n    type: SearchEventTypes.SUCCESS,\n    payload: searchResult\n});\n\nconst searchEventFailure = (err: string): SearchEventActionTypes => ({\n    type: SearchEventTypes.FAILURE,\n    meta: {\n        error: err\n    }\n});\n\nconst setSearchType = (searchType: SearchItemType): SearchEventActionTypes => ({\n    type: SearchEventTypes.SET_SEARCH_TYPE,\n    payload: searchType\n});\n\nexport const searchEventClearResults = (): SearchEventActionTypes => ({\n    type: SearchEventTypes.CLEAR,\n});\n\nexport const reverseResultsToggle = (): SearchEventActionTypes => ({\n    type: SearchEventTypes.REVERSE_RESULTS_TOGGLE,\n});\n","import axios from \"axios\";\nimport {Dispatch} from \"redux\";\nimport {WatchEpisodeRootActionTypes, WatchEpisodeState, WatchEpisodeTypes} from \"./types\";\n\nexport const watchPKAEpisode = (episodeNumber: number | \"latest\", timestamp: number) => (dispatch: Dispatch<WatchEpisodeRootActionTypes>) => {\n    dispatch(watchEpisodeStarted());\n\n    axios\n        .get(`/v1/api/pka_episode/watch/${episodeNumber}`)\n        .then(res => {\n\n            let watchEpisodeResult: WatchEpisodeState = {\n                episode: res.data.data.episode,\n                youtubeDetails: res.data.data.youtubeDetails,\n                events: res.data.data.events,\n                timestamp: timestamp,\n            };\n\n            return dispatch(watchEpisodeSuccess(watchEpisodeResult))\n        })\n        .catch(err => {\n            if (err.message === \"Network Error\") {\n                err = \"Server appears to be offline.\";\n            } else if (err.response) {\n                err = err.response.data.message;\n            } else {\n                err = err.message;\n            }\n\n            return dispatch(watchEpisodeFailure(err.message))\n        })\n};\n\nexport const saveTimestamp = (timestamp: number): WatchEpisodeRootActionTypes => ({\n    type: WatchEpisodeTypes.SAVE_TIMESTAMP,\n    payload: timestamp,\n});\n\nexport const setCurrentEventCard = (id: number): WatchEpisodeRootActionTypes => ({\n    type: WatchEpisodeTypes.SET_EVENT_CARD,\n    payload: id,\n});\n\nconst watchEpisodeStarted = (): WatchEpisodeRootActionTypes => ({\n    type: WatchEpisodeTypes.STARTED,\n});\n\nconst watchEpisodeSuccess = (watchState: WatchEpisodeState): WatchEpisodeRootActionTypes => ({\n    type: WatchEpisodeTypes.SUCCESS,\n    payload: watchState\n});\n\nconst watchEpisodeFailure = (err: string): WatchEpisodeRootActionTypes => ({\n    type: WatchEpisodeTypes.FAILURE,\n    meta: {\n        error: err\n    }\n});\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchResultCard from \"./SearchResultCard\";\nimport useConstant from \"use-constant\";\nimport AwesomeDebouncePromise from \"awesome-debounce-promise\";\nimport {useAsync} from \"react-async-hook\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {SearchEventActionTypes, SearchItemType} from \"../redux/search/types\";\nimport {reverseResultsToggle, searchEventClearResults, searchPKAItem} from \"../redux/search/actions\";\nimport {connect} from \"react-redux\";\nimport {RootState} from \"../redux\";\nimport {Box, CircularProgress, Fab, Tooltip, Typography} from \"@material-ui/core\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport {CellMeasurer, CellMeasurerCache, List} from \"react-virtualized\";\nimport {isMobile} from \"react-device-detect\";\nimport {watchPKAEpisode} from \"../redux/watch-episode/actions\";\nimport {useHistory} from \"react-router-dom\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<RootState, {}, SearchEventActionTypes>) => {\n    return {\n        searchPKAItem: (searchQuery: string, searchItemType: SearchItemType) => dispatch(searchPKAItem(searchQuery, searchItemType)),\n        watchPKAEpisode: (number: number, timestamp: number) => dispatch(watchPKAEpisode(number, timestamp)),\n        searchEventClearResults: () => dispatch(searchEventClearResults()),\n        reverseResultsToggle: () => dispatch(reverseResultsToggle()),\n    }\n};\n\nconst mapStateToProps = (state: RootState) => ({\n    searchState: state.search,\n    pathname: state.router.location.pathname,\n});\n\ninterface InputProps {\n    searchItemType: SearchItemType,\n}\n\ntype SearchComponentProps =\n    ReturnType<typeof mapStateToProps>\n    & ReturnType<typeof mapDispatchToProps>\n    & InputProps;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '95%',\n        width: '100%',\n        display: 'flex',\n        flexFlow: 'column'\n    },\n    search: {\n        borderRadius: theme.spacing(1),\n        backgroundColor: fade(theme.palette.common.black, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.black, 0.25),\n        },\n        display: 'flex',\n        padding: theme.spacing(1),\n        flexGrow: 1,\n    },\n    iconButton: {\n        padding: 10,\n        pointerEvents: 'none',\n        display: 'flex',\n    },\n    inputInput: {\n        color: 'inherit',\n        marginLeft: theme.spacing(0.5),\n        flex: 1,\n    },\n    subTitle: {\n        display: 'flex',\n        fontSize: '1.75ch',\n        color: fade(theme.palette.common.white, 0.45),\n        marginBottom: '1ch',\n    },\n    searchRow: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '1ch',\n    },\n    reverseButton: {\n        flexShrink: 0,\n        marginLeft: '2ch',\n        boxShadow: \"none\",\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.1),\n        },\n        '&:active': {\n            boxShadow: \"none\",\n            backgroundColor: fade(theme.palette.common.white, 0.025),\n        },\n    }\n}));\n\nconst SearchComponent: React.FC<SearchComponentProps> = (props) => {\n    const classes = useStyles();\n\n    const {reverseResultsToggle, watchPKAEpisode, searchPKAItem, searchEventClearResults, searchState, pathname, searchItemType} = props;\n\n    const searchPKAItemDebounced = useConstant(() =>\n        AwesomeDebouncePromise(searchPKAItem, 250)\n    );\n\n    const [input, setInput] = useState(\"\");\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const iRef = inputRef.current;\n\n        if (iRef) {\n            iRef.focus();\n        }\n\n        const resetInput = () => {\n            if (iRef) {\n                if (input === '') {\n                    setInput(' ');\n                } else {\n                    setInput('')\n                }\n                setInput(iRef.value);\n            }\n        };\n\n        if (isMobile) {\n            window.addEventListener('orientationchange', resetInput);\n        } else {\n            window.addEventListener('resize', resetInput);\n        }\n\n        return function cleanup() {\n            if (isMobile) {\n                window.removeEventListener('orientationchange', resetInput);\n            } else {\n                window.removeEventListener('resize', resetInput);\n            }\n        }\n    }, [input]);\n\n    useAsync(async () => {\n        const iRef = inputRef.current;\n\n        if (iRef) {\n            iRef.focus();\n        }\n\n        if (pathname === \"/episodes\") {\n            setInput('');\n            await searchPKAItemDebounced(input, searchItemType);\n        }\n    }, [pathname]);\n\n    useAsync(async () => {\n        const iRef = inputRef.current;\n\n        if (iRef) {\n            iRef.focus();\n        }\n\n        if (searchItemType === SearchItemType.EPISODE) {\n            await searchEventClearResults();\n            await searchPKAItemDebounced(input, searchItemType);\n        } else if (input.trim().length <= 2) {\n            await searchEventClearResults();\n        } else {\n            await searchEventClearResults();\n            await searchPKAItemDebounced(input, searchItemType);\n        }\n    }, [input, searchState.reverseResults]);\n\n    const cellMeasurerCache = new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: 80,\n    });\n\n    const paddedRowHeight = ({index}: any): number => {\n        let height = cellMeasurerCache.rowHeight({index});\n        return height + 5\n    };\n\n    const watch = (number: number, timestamp: number) => {\n        watchPKAEpisode(number, timestamp);\n        history.push(\"/watch\");\n    };\n\n    const renderRow = (props: any) => {\n        const {index, key, style, parent} = props;\n        const searchResult = searchState.searchResults[index];\n\n        return (\n            <CellMeasurer key={key}\n                          cache={cellMeasurerCache}\n                          parent={parent}\n                          rowIndex={index}>\n                <div style={style}\n                     onClick={() => watch(searchResult.episodeNumber, searchResult.timestamp)}>\n                    <SearchResultCard\n                        episodeNumber={searchResult.episodeNumber}\n                        title={searchResult.cardTitle()}\n                        subtitle={searchResult.cardSubtitle()}\n                    />\n                </div>\n            </CellMeasurer>\n        );\n    };\n\n    const handleReverseOrder = () => {\n        reverseResultsToggle();\n    };\n\n    return (\n        <Box height='97.5%'\n             key={searchItemType}>\n            <Box className={classes.root}>\n                <Box className={classes.searchRow}>\n                    <div className={classes.search}>\n                        <div className={classes.iconButton}>\n                            <SearchIcon/>\n                        </div>\n                        <InputBase\n                            error\n                            inputRef={inputRef}\n                            placeholder={`Search ${searchItemType}s`}\n                            classes={{\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{'aria-label': 'search'}}\n                            fullWidth={true}\n                            onChange={e => setInput(e.target.value)}\n                        />\n                        {searchState.isLoading && <div className={classes.iconButton}>\n                            <CircularProgress color=\"primary\"\n                                              size={23}\n                                              thickness={5}/>\n                        </div>}\n                    </div>\n                    {searchItemType === SearchItemType.EVENT && <Tooltip title=\"Reverse Order\">\n                        <Fab className={classes.reverseButton}\n                             disableRipple={true}\n                             disableTouchRipple={true}\n                             disableFocusRipple={true}\n                             onClick={() => handleReverseOrder()}\n                             size=\"large\"\n                             color=\"secondary\"\n                             aria-label=\"Reverse Order\">\n                            {searchState.reverseResults === true ? <ArrowUpwardIcon fontSize=\"default\"/> :\n                                <ArrowDownwardIcon fontSize=\"default\"/>}\n                        </Fab>\n                    </Tooltip>}\n                </Box>\n\n\n                {searchState.searchType === searchItemType &&\n                <div style={{height: '100%'}}>\n                    {!searchState.isLoading && <Typography variant=\"overline\"\n                                                           className={classes.subTitle}>\n                        {`${searchState.searchResults.length} Results`}\n                    </Typography>}\n                    <AutoSizer>\n                        {({height, width}) => (\n                            <List height={height}\n                                  width={width}\n                                  deferredMeasureMentCache={cellMeasurerCache}\n                                  rowCount={searchState.searchResults.length}\n                                  rowRenderer={renderRow}\n                                  rowHeight={paddedRowHeight}\n                                  overscanRowCount={10}\n                            >\n                            </List>\n                        )}\n                    </AutoSizer>\n                </div>\n                }\n            </Box>\n        </Box>\n    )\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SearchComponent)\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport {Card, Typography} from \"@material-ui/core\";\nimport {RootState} from \"../redux\";\nimport {connect} from \"react-redux\";\nimport moment from \"moment\";\n\ninterface Props {\n    id: number,\n    title: string,\n    timestamp: number,\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    watchEpisodeState: state.watchEpisode,\n});\n\ntype PlayerEventCardProps = ReturnType<typeof mapStateToProps> & Props;\n\nconst useStyles = makeStyles(theme => ({\n    resultCard: {\n        padding: '2ch',\n        backgroundColor: fade('#7a1d23', 0.15),\n        color: fade(theme.palette.common.white, 0.6),\n        '&:hover': {\n            backgroundColor: fade('#7a1d23', 0.5),\n            color: theme.palette.common.white,\n            cursor: 'pointer',\n        },\n        '&:active': {\n            backgroundColor: fade('#7a1d23', 0.2),\n            color: fade(theme.palette.common.white, 0.6),\n            cursor: 'pointer',\n        },\n    },\n    active: {\n        backgroundColor: fade('#7a1d23', 0.5),\n        color: theme.palette.common.white,\n    },\n    title: {\n        fontSize: '0.9rem',\n        marginBottom: '0.75ch',\n    },\n    subtitle: {\n        fontSize: '0.875rem',\n        color: fade(theme.palette.common.white, 0.6),\n    },\n}));\n\nconst PlayerEventCard: React.FC<PlayerEventCardProps> = (props) => {\n    const classes = useStyles();\n    const {id, title, timestamp, watchEpisodeState} = props;\n\n    const cardRef = useRef<any>(null);\n\n    const [isActive, setActive] = useState(false);\n\n    useEffect(() => {\n        const cRef = cardRef.current;\n\n        if (watchEpisodeState.events !== undefined) {\n            if (watchEpisodeState.currentEventCard === id) {\n                setActive(true);\n            } else {\n                setActive(false);\n            }\n        } else {\n            setActive(false);\n        }\n\n        if (cRef && isActive) {\n            cRef.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center'\n            })\n        }\n    }, [watchEpisodeState.events, watchEpisodeState.currentEventCard, id, isActive]);\n\n    return (\n        <Card ref={cardRef}\n              className={`${classes.resultCard} ${isActive ? classes.active : null}`}\n        >\n            <Typography className={classes.title}>{title}</Typography>\n            <Typography className={classes.subtitle}>{moment.utc(Number(timestamp) * 1000).format(\"HH:mm:ss\")}</Typography>\n        </Card>\n    )\n};\n\nexport default connect(\n    mapStateToProps,\n)(PlayerEventCard)\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {RootState} from \"../redux\";\nimport ReactPlayer from \"react-player\";\nimport {Box, Card, CardContent, CardHeader, List} from \"@material-ui/core\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {saveTimestamp, setCurrentEventCard, watchPKAEpisode} from \"../redux/watch-episode/actions\";\nimport {WatchEpisodeRootActionTypes} from \"../redux/watch-episode/types\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport PlayerEventCard from \"./PlayerEventCard\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {isMobile} from \"react-device-detect\";\n\nconst YOUTUBE_BASE_URL = 'https://www.youtube.com/watch?v=';\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, WatchEpisodeRootActionTypes>) => {\n    return {\n        watchPKAEpisode: (number: number | \"latest\", timestamp: number) => dispatch(watchPKAEpisode(number, timestamp)),\n        saveTimestamp: (timestamp: number) => dispatch(saveTimestamp(timestamp)),\n        setCurrentEventCard: (id: number) => dispatch(setCurrentEventCard(id)),\n    }\n};\n\nconst mapStateToProps = (state: RootState) => ({\n    watchEpisodeState: state.watchEpisode,\n});\n\ntype PlayerComponentProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\n\nconst useStyles = makeStyles(() => ({\n    videoCard: {\n        height: '100%',\n        backgroundColor: '#151515',\n        marginRight: '2ch',\n        display: 'flex',\n        flexFlow: 'column',\n        width: '75%',\n    },\n    fullWidth: {\n        width: '100%',\n    },\n    halfHeight: {\n        marginTop: '2ch',\n        height: '80%',\n        width: '100%'\n    },\n    fullHeight: {\n        height: '100%',\n    },\n    flexColumn: {\n        flexFlow: 'column'\n    },\n    eventsWidth: {\n        width: '25%',\n    },\n    eventsCard: {\n        backgroundColor: '#151515',\n        display: 'flex',\n        flexFlow: 'column',\n    },\n    eventsHeader: {\n        textAlign: 'center',\n        backgroundColor: '#111111',\n    },\n    listItem: {\n        marginBottom: '1ch',\n    }\n}));\n\nconst PlayerComponent: React.FC<PlayerComponentProps> = (props) => {\n    const classes = useStyles();\n\n    const {setCurrentEventCard, saveTimestamp, watchPKAEpisode, watchEpisodeState} = props;\n\n    const playerRef = useRef<ReactPlayer>(null);\n\n    const [isInitial, setInitial] = useState(false);\n\n    useEffect(() => {\n        if (!watchEpisodeState.isLoading) {\n            if (watchEpisodeState.episode === undefined) {\n                watchPKAEpisode(\"latest\", 0);\n                setInitial(true);\n            } else {\n                watchEpisodeState.events!.forEach((event, index) => {\n                    if (watchEpisodeState.timestamp >= event.timestamp) {\n                        setCurrentEventCard(index);\n                        return;\n                    }\n                });\n            }\n        }\n    }, [setCurrentEventCard, watchEpisodeState.episode, watchEpisodeState.events, watchEpisodeState.isLoading, watchEpisodeState.timestamp, watchPKAEpisode]);\n\n    const loadTimestamp = (timestamp?: number) => {\n        if (timestamp === 0) {\n            timestamp = 1\n        }\n\n        const pRef = playerRef.current;\n\n        if (pRef && !isInitial) {\n            pRef.seekTo(timestamp ? timestamp : watchEpisodeState.timestamp, \"seconds\");\n        }\n    };\n\n    const synchronizeTimestamp = () => {\n        const pRef = playerRef.current;\n\n        if (pRef) {\n            saveTimestamp(pRef.getCurrentTime());\n        }\n    };\n\n    const getUrl = (): string => {\n        const videoId = watchEpisodeState.youtubeDetails?.videoId;\n        return `${YOUTUBE_BASE_URL}${videoId}&origin=${window.location.origin}&enablejsapi=1`;\n    };\n\n    const handleInitial = () => {\n        if (isInitial) {\n            setInitial(false);\n        }\n    };\n\n    const isPortrait = () => {\n        return window.outerHeight >= window.outerWidth;\n    };\n\n    const hasEvents = () => {\n        return watchEpisodeState.events && watchEpisodeState.events.length > 0;\n    };\n\n    const isMobilePortrait = () => {\n        return isMobile && isPortrait();\n    };\n\n    const videoIsFullWidth = () => {\n        if (isMobilePortrait()) {\n            return true;\n        } else {\n            return !hasEvents();\n        }\n    };\n\n    if (watchEpisodeState.episode !== undefined && !watchEpisodeState.isLoading) {\n        return (\n            <Box display='flex'\n                 height='95%'\n                 className={isMobilePortrait() ? classes.flexColumn : ''}\n            >\n\n                <Card className={`${classes.videoCard} ${videoIsFullWidth() ? classes.fullWidth : null}`}>\n                    <div style={{height: '100%'}}>\n                        <ReactPlayer ref={playerRef}\n                                     config={{\n                                         youtube: {\n                                             preload: true,\n                                         }\n                                     }}\n                                     url={getUrl()}\n                                     width={'100%'}\n                                     height={'100%'}\n                                     controls={true}\n                                     playing={true}\n                                     onError={(e) => console.log(e)}\n                                     onProgress={() => synchronizeTimestamp()}\n                                     onPlay={() => handleInitial()}\n                                     onReady={() => loadTimestamp()}/>\n                    </div>\n                    <CardHeader title={watchEpisodeState.youtubeDetails?.title}\n                                subheader={moment.utc(Number(watchEpisodeState.episode?.uploadDate) * 1000).format(\"dddd Do MMMM YYYY\")}/>\n                </Card>\n\n                {hasEvents() &&\n                <Card className={`${classes.eventsCard} ${isMobilePortrait() ? classes.halfHeight : classes.eventsWidth}`}>\n                    <CardHeader\n                        className={classes.eventsHeader}\n                        subheader=\"Events\"\n                    />\n                    <Box maxHeight='92.5%'\n                         style={{overflow: \"auto\"}}>\n                        <CardContent>\n                            <List>\n                                {(watchEpisodeState.events!).map((event, i) => (\n                                    <div className={classes.listItem}\n                                         key={i}\n                                         onClick={() => loadTimestamp(event.timestamp)}\n                                    >\n                                        <PlayerEventCard\n                                            id={i}\n                                            title={event.description}\n                                            timestamp={event.timestamp}\n                                        />\n                                    </div>\n                                ))}\n                            </List>\n                        </CardContent>\n                    </Box>\n                </Card>\n                }\n            </Box>\n        )\n    } else {\n        return (\n            <Box display='flex'\n                 flex='1'\n                 height='95%'>\n                <Card className={classes.videoCard}>\n                    <div style={{height: '100%'}}>\n                        <Skeleton variant=\"rect\"\n                                  width={\"100%\"}\n                                  height={\"100%\"}/>\n                    </div>\n                    <CardHeader\n                        title={<Skeleton/>}\n                        subheader={<Skeleton width=\"40%\"/>}\n                    />\n                </Card>\n                <Card className={classes.eventsCard}>\n                    <CardHeader\n                        className={classes.eventsHeader}\n                        subheader=\"Events\"\n                    />\n                    <Box maxHeight='92.5%'\n                         style={{overflow: \"hidden\"}}>\n                        <CardContent>\n                            <List>\n                                {Array(10).fill(0).map((event, i) => (\n                                    <div className={classes.listItem}\n                                         key={i}\n                                    >\n                                        <Skeleton variant=\"rect\"\n                                                  width={\"100%\"}\n                                                  height={\"10vh\"}/>\n                                    </div>\n                                ))}\n                            </List>\n                        </CardContent>\n                    </Box>\n                </Card>\n            </Box>\n        )\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(PlayerComponent)","import {SearchEventActionTypes, SearchEventTypes, SearchState} from \"./types\";\nimport {LOCATION_CHANGE} from \"connected-react-router\";\n\nconst initialState: SearchState = {\n    searchQuery: \"\",\n    searchResults: [],\n    reverseResults: false,\n    isLoading: false,\n    errors: []\n};\n\nexport function searchReducer(\n    state = initialState,\n    action: SearchEventActionTypes\n): SearchState {\n    switch (action.type) {\n        case SearchEventTypes.STARTED: {\n            return {\n                ...state,\n                isLoading: true,\n            };\n        }\n        case SearchEventTypes.FAILURE: {\n            return {\n                ...state,\n                isLoading: false,\n                errors: [...state.errors!, action.meta.error],\n            };\n        }\n        case SearchEventTypes.SUCCESS: {\n            return {\n                ...state,\n                isLoading: false,\n                ...action.payload,\n            };\n        }\n        case SearchEventTypes.CLEAR: {\n            return {\n                ...state,\n                searchResults: [],\n            };\n        }\n        case LOCATION_CHANGE: {\n            return {\n                ...state,\n                searchQuery: \"\",\n                searchResults: []\n            }\n        }\n        case SearchEventTypes.SET_SEARCH_TYPE: {\n            return {\n                ...state,\n                searchType: action.payload\n            }\n        }\n        case SearchEventTypes.REVERSE_RESULTS_TOGGLE: {\n            return {\n                ...state,\n                reverseResults: state.reverseResults !== true,\n            }\n        }\n        default:\n            return state\n    }\n}","import {WatchEpisodeRootActionTypes, WatchEpisodeState, WatchEpisodeTypes} from \"./types\";\n\nconst initialState: WatchEpisodeState = {\n    episode: undefined,\n    events: undefined,\n    youtubeDetails: undefined,\n    timestamp: 0,\n    currentEventCard: 0,\n    isLoading: false,\n    errors: []\n};\n\nexport function watchEpisodeReducer(\n    state = initialState,\n    action: WatchEpisodeRootActionTypes\n): WatchEpisodeState {\n    switch (action.type) {\n        case WatchEpisodeTypes.STARTED: {\n            return {\n                ...state,\n                isLoading: true,\n            };\n        }\n        case WatchEpisodeTypes.FAILURE: {\n            return {\n                ...state,\n                isLoading: false,\n                errors: [...state.errors!, action.meta.error],\n            };\n        }\n        case WatchEpisodeTypes.SUCCESS: {\n            return {\n                ...state,\n                isLoading: false,\n                ...action.payload,\n            };\n        }\n        case WatchEpisodeTypes.SAVE_TIMESTAMP: {\n            return {\n                ...state,\n                timestamp: action.payload,\n            };\n        }\n        case WatchEpisodeTypes.SET_EVENT_CARD: {\n            return {\n                ...state,\n                currentEventCard: action.payload,\n            };\n        }\n        default:\n            return state\n    }\n}","import {searchReducer} from \"./search/reducers\";\nimport {combineReducers} from \"redux\";\nimport {watchEpisodeReducer} from \"./watch-episode/reducers\";\nimport {connectRouter, RouterState} from 'connected-react-router'\nimport {SearchState} from \"./search/types\";\nimport {WatchEpisodeState} from \"./watch-episode/types\";\n\nexport const rootReducer = (history: any) => combineReducers({\n    router: connectRouter(history),\n    search: searchReducer,\n    watchEpisode: watchEpisodeReducer,\n});\n\nexport interface RootState {\n    router: RouterState,\n    search: SearchState,\n    watchEpisode: WatchEpisodeState,\n}\n","import {applyMiddleware, createStore, StoreEnhancer} from \"redux\";\nimport {rootReducer} from \"./index\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {createBrowserHistory} from 'history';\nimport thunk from \"redux-thunk\";\nimport {routerMiddleware} from \"connected-react-router\";\n\nexport const history = createBrowserHistory();\n\nconst middlewares = [thunk, routerMiddleware(history)];\nconst middlewareEnhancer = applyMiddleware(...middlewares);\nconst enhancers = [middlewareEnhancer];\nconst composedEnhancer: StoreEnhancer = composeWithDevTools(...enhancers);\n\nexport default createStore(rootReducer(history), composedEnhancer);","import React from \"react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport DrawerComponent from './DrawerComponent';\nimport {Route, Switch} from \"react-router-dom\";\nimport SearchComponent from \"./SearchComponent\";\nimport PlayerComponent from \"./PlayerComponent\";\nimport {SearchItemType} from \"../redux/search/types\";\nimport {ConnectedRouter} from \"connected-react-router\";\nimport {history} from \"../redux/store\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(4),\n        paddingBottom: theme.spacing(6),\n        height: '100vh',\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nconst RootComponent: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <ConnectedRouter history={history}>\n            <div className={classes.root}>\n                <DrawerComponent/>\n                <main className={classes.content}>\n                    <div className={classes.toolbar}/>\n                    <Switch>\n                        <Route exact\n                               path=\"/\">\n                            <PlayerComponent/>\n                        </Route>\n                        <Route exact\n                               path=\"/watch\">\n                            <PlayerComponent/>\n                        </Route>\n                        <Route exact\n                               path=\"/episodes\">\n                            <SearchComponent searchItemType={SearchItemType.EPISODE}/>\n                        </Route>\n                        <Route exact\n                               path=\"/events\">\n                            <SearchComponent searchItemType={SearchItemType.EVENT}/>\n                        </Route>\n                    </Switch>\n                </main>\n            </div>\n        </ConnectedRouter>\n    )\n};\n\nexport default RootComponent;\n","import React from 'react';\nimport RootComponent from \"./components/RootComponent\";\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <RootComponent/>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {createMuiTheme, CssBaseline, MuiThemeProvider} from \"@material-ui/core\";\nimport \"./App.css\";\nimport 'typeface-roboto';\nimport 'raleway-webfont';\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        background: {\n            default: '#0f0f0f',\n        },\n        primary: {\n            main: '#4d1419',\n        },\n        secondary: {\n            main: \"#171717\",\n        }\n    },\n});\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider theme={darkTheme}>\n            <CssBaseline/>\n            <App/>\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}